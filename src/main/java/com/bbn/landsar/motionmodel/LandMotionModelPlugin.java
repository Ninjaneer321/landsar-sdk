/*
LandSAR Motion Model Software Development Kit
Copyright (c) 2023 Raytheon Technologies 

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
https://github.com/atapas/add-copyright.git
*/

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.bbn.landsar.motionmodel;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import com.bbn.landsar.MovementSchedule;
import com.bbn.landsar.geospatial.AreaData;
import com.bbn.landsar.utils.StatusUpdateMessage;
import com.metsci.glimpse.util.geo.LatLonGeo;


/**
 * This interface extends the ROGER Plugin interface, and is intended for Motion Model Plugins for LandSAR. 
 * @author crock
 *
 */
public interface LandMotionModelPlugin extends MotionModelPlugin {
	final static Set<AreaDataType> defaultLandDataTypes = new HashSet<>();

	/**
	 * 
	 * Create a new Model for a new Lost Person Instance and return the initial distribution (over time), 
	 * mapping time to the distribution over the bounding box at that time. 
	 * 
	 * @see https://www.epochconverter.com/
	 * 
	 * @param lpiId - a unique identifier for this Lost Person Instance. This id is referenced when calling calculateProbabilityOfSuccess, updateProbabilityDistributionForSearch, cancelSearch, deleteModelState. 
	 * @param geospatialInputs
	 * @param areaData - The AreaData includes the Bounding Box for the Lost Person Instance, as well as Elevation and LandCover data over the BoundingBox.
	 * @param motionModelParameters - values of parameters for this LPI. Prior to calling this method, {@link #validateMotionModelParameters(Map, StatusUpdateMessage)} will be called with the parameters.
	 * @param schedule - The Movement Schedule represents when the lost person is expected to be moving. Most current movement schedules are the same for any 24-hour period, but this interface allows the Movement Schedules and types of Movement Schedules to be extended. 
	 * @param startTime - The time (in Unix/Epoch Time) the person was last seen or estimated to be located at the startTimeDistribution. 
	 * @param startTimeDistribution - The Last Known Point of the lost person. This may be a single point or a distribution based on user-entered data. 
	 * @param StatusUpdateMessage status - The Status Update Message can be used to send information back to the LandSAR user about the progress of modeling and computation, since this method may be compute/time intensive.
	 * @return Initial Distribution: The estimated location of the lost person before considering any searches. This "initial distribution" is realized as a set of geographic distributions modeled over discrete times. The geographic distributions should be constrained to the provided Bounding Box. 
	 * The times included in any distribution should be hourly, starting at the startTime, and ending when the model anticipates no further movement within the bounding box. 
	 * @deprecated Use {@link #generateInitialDistribution(MotionModelInput)} instead
	 */
	public default Map<Long, ProbabilityDistribution> createInitialDistribution(UUID lpiId, UserEnteredGeospatialData geospatialInputs,
																		AreaData areaData, Map<String, Object> motionModelParameters,
																		MovementSchedule schedule, long startTime,
																		List<LatLonGeo> startTimeDistribution, StatusUpdateMessage status){
		MotionModelResult result = this.generateInitialDistribution(new MotionModelInput(lpiId, geospatialInputs, areaData, motionModelParameters, schedule, startTime, startTimeDistribution, status));
		if (result == null) {
			return null;
		}
		return result.getInitialDistribution();
	}
	
	
	public default Set<AreaDataType> getRequiredAreaData(){
		synchronized (defaultLandDataTypes) {
			if (defaultLandDataTypes.isEmpty()){
				defaultLandDataTypes.add(new AreaDataType(AreaDataType.ELEVATION, true));
				defaultLandDataTypes.add(new AreaDataType(AreaDataType.LANDCOVER, false));
			}
			return new HashSet<>(defaultLandDataTypes);
		}
	}
	
	/**
	 * Returns serializable information about this plugin that can be shared
	 * with OSPPRE clients.
	 * @return serializable information about this plugin.
	 */
	public default MotionModelPluginMetadata getMetadata() {
		// land motion model plugins *should* support the "stay out of water" attribute. Historically, the default value for any given LPI was "true". 
		boolean stayOutOfWaterEnabled = true;
		// show the landcover metadata screen if the plugin will use Landcover at all (if it is optional or required)
		boolean landcoverMetadataEnabled = this.getRequiredAreaData().stream().anyMatch(req -> AreaDataType.LANDCOVER.equals(req.typeOfAreaData));
		return new MotionModelPluginMetadata(this.getName(), this.getMotionModelParameters(), this.getMotionModelGeospatialDescriptions(),
                stayOutOfWaterEnabled, landcoverMetadataEnabled);
	}

}
